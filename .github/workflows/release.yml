---
name: cura-installer

on:
    workflow_dispatch:
        inputs:
            conan_config:
                description: 'Conan config branch to use'
                default: 'CURA-9177_Fix_CI_CD'
                required: true
            enterprise:
                description: 'Build Cura as an Enterprise edition'
                required: true
                default: false
                type: boolean
            staging:
                description: 'Use staging API'
                required: true
                default: false
                type: boolean

env:
    CONAN_USER: ${{ secrets.CONAN_USER }}
    CONAN_PASS: ${{ secrets.CONAN_PASS }}
    GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
    GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
    CODESIGN_IDENTITY: ${{ secrets.CODESIGN_IDENTITY }}
    NOTARIZE_USER: ${{ secrets.NOTARIZE_USER }}
    NOTARIZE_PASSWORD: ${{ secrets.NOTARIZE_PASSWORD }}

jobs:
    get-semver:

        runs-on: ubuntu-20.04

        outputs:
            semver_full: ${{ steps.git-tool.outputs.Major }}.${{ steps.git-tool.outputs.Minor }}.${{ steps.git-tool.outputs.Patch }}-${{ steps.prereleasetag.outputs.PreReleaseTag }}.${{ steps.date.outputs.BuildMetaData }}
            semver_major: ${{ steps.git-tool.outputs.Major }}
            semver_minor: ${{ steps.git-tool.outputs.Minor }}
            semver_patch: ${{ steps.git-tool.outputs.Patch }}
            semver_prereleasetag: ${{ steps.prereleasetag.outputs.PreReleaseTag }}
            semver_build: ${{ steps.date.outputs.BuildMetaData }}

        steps:
        -   name: Checkout Arcus
            uses: actions/checkout@v3
            with:
                ref: ${{ github.head_ref }}
                fetch-depth: 0

        -   name: Install GitVersion
            uses: gittools/actions/gitversion/setup@v0.9.13
            with:
                versionSpec: '5.x'

        -   id: git-tool
            name: GitTools
            uses: gittools/actions/gitversion/execute@v0.9.13

        -   name: Get build number based on data
            id: date
            run: echo "::set-output name=BuildMetaData::$(date +'%Y%m%d%H%M')"

        -   name: Get short PreReleaseTag
            id: prereleasetag
            run: echo "::set-output name=PreReleaseTag::${${{ steps.git-tool.outputs.PreReleaseTag }}:0:9}}"

    cura-installer-create:
        runs-on: ${{ matrix.os }}

        needs: [ get-semver ]

        strategy:
            fail-fast: false
            matrix:
                os: [ macos-10.15, windows-2022, ubuntu-20.04 ]

        steps:
        -   name: Checkout cura-build-environment
            uses: actions/checkout@v3

        -   name: Setup Python and pip
            uses: actions/setup-python@v3
            with:
                python-version: '3.10.4'
                architecture: 'x64'
                cache: 'pip'
                cache-dependency-path: requirements-runner.txt

        -   name: Prepare Python environment runner
            run: pip install -r requirements-runner.txt

        -   name: Cache Conan local repository packages (Bash)
            uses: actions/cache@v3
            if: ${{ runner.os != 'Windows' }}
            with:
                path: |
                    $HOME/.conan/data
                key: ${{ runner.os }}-conan

        -   name: Cache Conan local repository packages (Powershell)
            uses: actions/cache@v3
            if: ${{ runner.os == 'Windows' }}
            with:
                path: |
                    C:\Users\runneradmin\.conan\data
                    C:\.conan
                key: ${{ runner.os }}-conan

        -   name: Prepare Conan (Bash)
            if: ${{ runner.os != 'Windows' }}
            run: |
                # FIXME: Once Cura is also a full package
                echo "CURA_VERSION={{ needs.get-semver.outputs.semver_full }}" >> $GITHUB_ENV
                echo $CURA_VERSION
                
                conan config install https://github.com/Ultimaker/conan-config.git -a "-b ${{ github.event.inputs.conan_config }}" -tf $HOME/.conan
                conan profile new default --detect
                conan user -p $CONAN_PASS -r ultimaker $CONAN_USER
                conan install . -pr:b cura_build.jinja -pr:h cura_release.jinja --build=missing --update -g GitHubActionsBuildEnv -g GitHubActionsRunEnv
                conan source .
                
                cd cura
                conan install . -pr:b cura_build.jinja -pr:h cura_release.jinja -o cura:devtools=True -o cura:staging=${{ github.event.inputs.staging }} -o cura:enterprise=${{ github.event.inputs.enterprise }} --build=missing --update -g GitHubActionsBuildEnv -g GitHubActionsRunEnv
                chmod +x venv/conan/activate_github_actions_buildenv.sh
                chmod +x venv/conan/activate_github_actions_runenv.sh
                chmod +x venv/bin/activate_github_actions_env.sh
                ./venv/conan/activate_github_actions_buildenv.sh
                ./venv/bin/activate_github_actions_env.sh

        -   name: Prepare Conan (Powershell)
            if: ${{ runner.os == 'Windows' }}
            run: |
                # FIXME: Once Cura is also a full package
                echo "CURA_VERSION={{ needs.get-semver.outputs.semver_full }}" >> $Env:GITHUB_ENV
                echo $Env:CURA_VERSION
                
                conan config install https://github.com/Ultimaker/conan-config.git -a "-b ${{ github.event.inputs.conan_config }}" -tf C:\Users\runneradmin\.conan
                conan profile new default --detect
                conan user -p $env:CONAN_PASS -r ultimaker $env:CONAN_USER
                conan install . -pr:b cura_build.jinja -pr:h cura_release.jinja --build=missing --update -g GitHubActionsBuildEnv -g GitHubActionsRunEnv
                conan source .
                
                cd cura
                conan install . -pr:b cura_build.jinja -pr:h cura_release.jinja -o cura:devtools=True -o cura:staging=${{ github.event.inputs.staging }} -o cura:enterprise=${{ github.event.inputs.enterprise }} --build=missing --update -g GitHubActionsBuildEnv -g GitHubActionsRunEnv
                .\venv\conan\activate_github_actions_buildenv.ps1
                .\venv\Scripts\activate_github_actions_env.ps1

        -   name: Upload the Package(s)
            run: conan upload "*" -r ultimaker --all -c

        -   name: Archive artifacts
            uses: actions/upload-artifact@v3
            with:
                name: installer
                path: |
                    install/dist/*.exe
                    install/dist/*.Appimage
                    install/dist/*.dmg
                    retention-days: 2
